// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  password      String
  accounts      Account[]     @relation("UserAccounts")
  transactions  Transaction[] @relation("UserTransactions")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Account {
  id            String        @id @default(uuid())
  userId        String
  type          AccountType
  balance       Float         @default(0.0)
  paymentHistories PaymentHistory[] @relation("AccountPaymentHistories")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  user          User          @relation("UserAccounts", fields: [userId], references: [id])
}

model PaymentHistory {
  id            String     @id @default(uuid())
  accountId     String
  amount        Float
  type          PaymentType
  timestamp     DateTime    @default(now())

  account       Account     @relation("AccountPaymentHistories", fields: [accountId], references: [id])
}

model Transaction {
  id            String     @id @default(uuid())
  userId        String
  amount        Float
  timestamp     DateTime    @default(now())
  toAddress     String
  status        TransactionStatus
  transactionType TransactionType
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  user          User       @relation("UserTransactions", fields: [userId], references: [id])
}

enum AccountType {
  CREDIT
  DEBIT
  LOAN
}

enum PaymentType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

enum TransactionType {
  SEND
  WITHDRAW
}